{
  "version": 3,
  "sources": ["../../../../../src/client/views/pages/home-page.ts"],
  "sourcesContent": ["import { Page } from 'router/src/data/page.ts';\n\nimport { View } from '../view.ts';\n\nimport { ScrollActionTop, ScrollEventData, ScrollEventType, ScrollActionTo } from '../../data/scroll.ts';\n\nimport { loadContent } from '../../utils.ts';\n\nimport { layouts } from '../../globals.ts';\n\nexport class HomePage implements View {\n  protected static page: HomePage | null = null;\n\n  protected node: HTMLElement | null = null;\n\n  protected scrollTopBtn: HTMLElement | null = null;\n\n  protected scrollTopBtnClickHandler: () => void;\n\n  protected windowScrollHandler: (event: Event) => void;\n\n  protected currScroll = 0;\n\n  static get instance(): HomePage {\n    if(!HomePage.page) {\n      HomePage.page = new HomePage();\n    }\n\n    return HomePage.page;\n  }\n\n  constructor() {\n    this.scrollTopBtnClickHandler = () => {\n      layouts['main-layout']?.performAction?.(ScrollActionTop, null);\n    };\n\n    this.windowScrollHandler = (event) => {\n      const data = (event as CustomEvent<ScrollEventData>).detail;\n\n      if(data.currScroll <= 0) {\n        this.scrollTopBtn?.classList.add('btn-exited');\n      } else {\n        this.scrollTopBtn?.classList.remove('btn-exited');\n      }\n\n      this.currScroll = data.currScroll;\n    };\n  }\n\n  get elem(): HTMLElement | null {\n    return this.node;\n  }\n\n  async init(parent: HTMLElement | null, firstTime: boolean) {\n    let content = await loadContent(parent, firstTime, ['main-layout']);    \n\n    this.node = content.querySelector('[data-page=\"home-page\"]') || null;\n\n    this.scrollTopBtn = this.node?.querySelector('[data-button=\"scroll-top\"]') || null;    \n    \n    return content;\n  }\n\n  async mount() {\n    this.scrollTopBtn?.addEventListener('click', this.scrollTopBtnClickHandler);\n\n    layouts['main-layout']?.listen?.(ScrollEventType, this.windowScrollHandler);\n  }\n\n  async unmount() {\n    this.scrollTopBtn?.removeEventListener('click', this.scrollTopBtnClickHandler);\n\n    layouts['main-layout']?.unlisten?.(ScrollEventType, this.windowScrollHandler);\n  }\n\n  async load(lang: string, page: Page, firstLoad: boolean) {\n    layouts['main-layout']?.performAction?.(ScrollActionTo, {\n      top: this.currScroll,\n      noSmooth: true\n    });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAUO,sBAA+B;AAAA,EAG1B,OAA2B;AAAA,EAE3B,eAAmC;AAAA,EAEnC;AAAA,EAEA;AAAA,EAEA,aAAa;AAAA,aAEZ,WAAqB;AAC9B,QAAG,CAAC,UAAS,MAAM;AACjB,gBAAS,OAAO,IAAI;AAAA;AAGtB,WAAO,UAAS;AAAA;AAAA,EAGlB,cAAc;AACZ,SAAK,2BAA2B,MAAM;AACpC,cAAQ,gBAAgB,gBAAgB,iBAAiB;AAAA;AAG3D,SAAK,sBAAsB,CAAC,UAAU;AACpC,YAAM,OAAQ,MAAuC;AAErD,UAAG,KAAK,cAAc,GAAG;AACvB,aAAK,cAAc,UAAU,IAAI;AAAA,aAC5B;AACL,aAAK,cAAc,UAAU,OAAO;AAAA;AAGtC,WAAK,aAAa,KAAK;AAAA;AAAA;AAAA,MAIvB,OAA2B;AAC7B,WAAO,KAAK;AAAA;AAAA,QAGR,KAAK,QAA4B,WAAoB;AACzD,QAAI,UAAU,MAAM,YAAY,QAAQ,WAAW,CAAC;AAEpD,SAAK,OAAO,QAAQ,cAAc,8BAA8B;AAEhE,SAAK,eAAe,KAAK,MAAM,cAAc,iCAAiC;AAE9E,WAAO;AAAA;AAAA,QAGH,QAAQ;AACZ,SAAK,cAAc,iBAAiB,SAAS,KAAK;AAElD,YAAQ,gBAAgB,SAAS,iBAAiB,KAAK;AAAA;AAAA,QAGnD,UAAU;AACd,SAAK,cAAc,oBAAoB,SAAS,KAAK;AAErD,YAAQ,gBAAgB,WAAW,iBAAiB,KAAK;AAAA;AAAA,QAGrD,KAAK,MAAc,MAAY,WAAoB;AACvD,YAAQ,gBAAgB,gBAAgB,gBAAgB;AAAA,MACtD,KAAK,KAAK;AAAA,MACV,UAAU;AAAA;AAAA;AAAA;AApET;AACY,cADZ,UACY,QAAwB;",
  "names": []
}
