{
  "version": 3,
  "sources": ["../../../../src/globals.ts", "esbuild-import:https://deno.land/x/azizka_deno_router@1.2.0/src/utils.ts", "esbuild-import:https://deno.land/x/azizka_deno_router@1.2.0/src/router.ts", "esbuild-import:https://deno.land/x/azizka_deno_router@1.2.0/src/route-navigator.ts", "esbuild-import:https://deno.land/x/azizka_deno_i18n@1.1.0/src/utils.ts", "esbuild-import:https://deno.land/x/azizka_deno_i18n@1.1.0/src/translator.ts", "../../../../src/client/globals.ts", "../../../../src/client/utils.ts"],
  "sourcesContent": ["export const VERSION = '0.0.1';\n\nexport const PAGE_ROOT = '/';\n\nexport const LANGUAGES = {\n  kz: { \n    image: '/images/flags/kz.svg',\n    label: '\u049A\u0430\u0437\u0430\u049B\u0448\u0430'\n  },\n  ru: { \n    image: '/images/flags/ru.svg',\n    label: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439'\n  },\n  en: { \n    image: '/images/flags/en.svg',\n    label: 'English'\n  }\n};\n\nexport const DEFAULT_LANGUAGE = 'kz';\n", "export function trimSlashes(path: string) {\n  return path.replace(/\\/$/, '').replace(/^\\//, '');\n}\n\nexport function transformURL(url: string, currentPath: string, root: string) {\n  const newUrl = url.trim();\n  const splits = newUrl.split('?');\n\n  let path = splits[0].trim();\n  const query = splits[1]?.trim();\n\n  if(!path) {\n    path = currentPath;\n  } else {\n    if(root !== '/') {\n      path = path.replace(root, '');\n    }\n\n    path = trimSlashes(path);\n  }\n\n  if(!query) {\n    return path;\n  }\n\n  return `${path}?${query}`;\n} \n\nexport function parseQuery(query: string) {\n  const data: {\n    [key: string]: string\n  } = {};\n\n  let search = query;\n\n  if(query[0] === '?') {\n    search = query.substring(1);\n  }\n\n  search.split('&').forEach(row => {\n    const parts = row.split('=');\n\n    if(parts[0] !== '') {\n      const key = decodeURIComponent(parts[0]);\n      const value = parts[1] === undefined ? '1' : parts[1];\n\n      data[key] = value;\n    }\n  });\n\n  return data;    \n}\n\nexport function parseRouteRule(route: string | RegExp) {\n  if(typeof route === 'string') {\n    const uri = trimSlashes(route);\n\n    const rule = uri\n      .replace(/([\\\\\\/\\-\\_\\.])/g, '\\\\$1')\n      .replace(/\\{[a-zA-Z]+\\}/g, '(:any)')\n      .replace(/\\:any/g, '[\\\\w\\\\-\\\\_\\\\.]+')\n      .replace(/\\:word/g, '[a-zA-Z]+')\n      .replace(/\\:num/g, '\\\\d+');\n\n    return new RegExp(`^${rule}$`, 'i');\n  }\n\n  return route;\n}", "import { Page } from './data/page.ts';\nimport { Route } from './data/route.ts';\nimport { RouterOptions } from './data/router-options.ts';\n\nimport { trimSlashes, parseRouteRule } from './utils.ts';\n\nexport class Router<RouteOptions = any, RouteState = any> {\n  protected routes: Route<RouteOptions, RouteState>[] = [];\n  protected root = '/';\n  protected before?(page: Page<RouteOptions, RouteState>): Promise<boolean>;\n  protected page404?(page: Page<RouteOptions, RouteState>): Promise<void>;\n\n  constructor(options?: RouterOptions<RouteOptions, RouteState>) {\n    this.before = options?.before;\n    this.page404 = options?.page404;\n\n    if(options?.root) {\n      this.root = options.root === '/' ? '/' : `/${trimSlashes(options.root)}/`;\n    }\n\n    if(options?.routes) {\n      this.addRoutes(options.routes);\n    }\n  }\n\n  get rootPath() {\n    return this.root;\n  }\n\n  addRoutes(routes: Route<RouteOptions, RouteState>[]) {\n    for(const route of routes) {\n      this.add(route.rule, route.handler, route.options);\n    }\n  }\n\n  add(rule: string | RegExp, handler?: (page: Page<RouteOptions, RouteState>) => Promise<void>, options?: RouteOptions) {\n    this.routes.push({\n      rule: parseRouteRule(rule),\n      handler,\n      options\n    });\n\n    return this;\n  }\n\n  remove(param: string | RegExp | ((page: Page<RouteOptions, RouteState>) => Promise<void>)) {\n    this.routes.some((route, i) => {\n      if(route.handler === param || route.rule === parseRouteRule(param as string | RegExp)) {\n        this.routes.splice(i, 1);\n\n        return true;\n      }\n\n      return false;\n    });\n    \n    return this;\n  } \n  \n  findRoute(currentPath: string) {    \n    for(const route of this.routes) {\n      const match = currentPath.match(route.rule);\n\n      if(match) {\n        return {\n          match,\n          route\n        };\n      }\n    }\n  }\n\n  async processUrl(currentPath: string, currentQuery: { [key: string]: string }, state?: RouteState) {\n    const doBreak = await this.before?.({\n      fragment: currentPath,\n      query: currentQuery,\n      state\n    });\n\n    if(!doBreak) {\n      const found = this.findRoute(currentPath);\n\n      if(!found) {\n        await this.page404?.({\n          fragment: currentPath,\n          query: currentQuery,\n          state\n        });\n      } else {\n        found.match.shift();\n\n        const page: Page<RouteOptions, RouteState> = {\n          fragment: currentPath,\n          query: currentQuery,\n          match: found.match,\n          options: found.route.options,\n          state\n        };\n\n        await found.route.handler?.(page);\n      }\n    }\n  }\n}\n", "import { Router } from './router.ts';\n\nimport { transformURL, trimSlashes, parseQuery } from './utils.ts';\n\nexport class RouteNavigator<RouteOptions = any, RouteState = any> {\n  protected popStateHandler: () => void;\n\n  constructor(\n    protected router: Router<RouteOptions, RouteState>\n  ) { \n    this.popStateHandler = () => {\n      router.processUrl(this.fragment, this.query, history.state);\n    };\n  }  \n\n  get fragment() {\n    let value = decodeURI(location.pathname);\n  \n    if(this.router.rootPath !== '/') {\n      value = value.replace(this.router.rootPath, '');\n    }\n  \n    return trimSlashes(value);\n  }\n  \n  get query() {\n    return parseQuery(location.search);\n  }\n\n  async redirectTo(url: string, state?: RouteState) {\n    const newUrl = transformURL(url, this.fragment, this.router.rootPath);  \n\n    history.replaceState(state, '', this.router.rootPath + newUrl);\n\n    const currentPath = this.fragment;\n    const currentQuery = this.query;\n    \n    await this.router.processUrl(currentPath, currentQuery, state);\n  }\n\n  async navigateTo(url: string, state?: RouteState) {\n    const newUrl = transformURL(url, this.fragment, this.router.rootPath);  \n    \n    history.pushState(state, '', this.router.rootPath + newUrl);\n\n    const currentPath = this.fragment;\n    const currentQuery = this.query;\n    \n    await this.router.processUrl(currentPath, currentQuery, state);\n  }\n\n  refresh() {\n    return this.redirectTo(this.fragment + location.search, history.state);\n  } \n\n  addUriListener() {\n    window.addEventListener('popstate', this.popStateHandler);\n  }\n\n  removeUriListener() {\n    window.removeEventListener('popstate', this.popStateHandler);\n  }\n}", "export function isObject(obj: any) {\n  const type = typeof obj;\n\n  return type === 'function' ||\n    (type === 'object' && !!obj);\n}\n", "import { DataOptions } from './data/data-options.ts';\nimport { FormattingContext } from './data/formatting-context.ts';\nimport { Values } from './data/values.ts';\n\nimport { isObject } from './utils.ts';\n\nexport class Translator {\n  protected data?: DataOptions;\n  protected globalContext!: FormattingContext;\n  \n  protected extension?: (\n    text: string | number, \n    num?: number, \n    formatting?: FormattingContext, \n    data?: Values\n  ) => string | number;\n\n  constructor() {\n    this.resetContext();\n  }\n\n  static create(data: DataOptions) {\n    const translator = new Translator();\n\n    translator.add(data);\n\n    return translator;\n  }\n\n  translate(\n    text: string | number, \n    defaultNumOrFormatting?: number | FormattingContext, \n    numOrFormattingOrContext?: number | FormattingContext,\n    formattingOrContext?: FormattingContext    \n  ) {\n    let num: number | undefined;\n    let formatting: FormattingContext | undefined;    \n    let context: FormattingContext = this.globalContext;\n\n    if(isObject(defaultNumOrFormatting)) {\n      formatting = defaultNumOrFormatting as FormattingContext;\n      \n      if(isObject(numOrFormattingOrContext)) {\n        context = numOrFormattingOrContext as FormattingContext;\n      }\n    } else if(typeof defaultNumOrFormatting === 'number') {\n      num = defaultNumOrFormatting;\n      formatting = numOrFormattingOrContext as FormattingContext;\n\n      if(formattingOrContext) {\n        context = formattingOrContext;\n      }\n    } else {\n      if(typeof numOrFormattingOrContext === 'number') {\n        num = numOrFormattingOrContext;\n        formatting = formattingOrContext;\n      } else {\n        formatting = numOrFormattingOrContext;\n        \n        if(formattingOrContext) {\n          context = formattingOrContext;\n        }\n      }\n    }\n\n    return this.translateText(text, num, formatting, context);\n  } \n  \n  add(data: DataOptions) {\n    if(!this.data) {\n      this.data = data;\n    } else {\n      if(data.values && this.data.values) {\n        for(const key of Object.keys(data.values)) {\n          this.data.values[key] = data.values[key];\n        }\n      }\n  \n      if(data.contexts && this.data.contexts) {\n        for(const context of data.contexts) {\n          this.data.contexts.push(context);\n        }\n      }\n    }\n  }\n\n  setContext(key: string, value: string) {\n    this.globalContext[key] = value;\n  }\n\n  extend(\n    extension: (\n      text: string | number, \n      num?: number, \n      formatting?: FormattingContext, \n      data?: Values\n    ) => string | number\n  ) {\n    this.extension = extension;\n  }\n\n  clearContext(key: string) {\n    delete this.globalContext[key];\n  }\n\n  reset() {\n    this.resetData();\n    this.resetContext();\n  }\n\n  resetData() {\n    this.data = {\n      values: {},\n      contexts: []\n    };\n  }\n\n  resetContext() {\n    this.globalContext = {};\n  }\n\n  translateText(\n    text: string | number, \n    num?: number, \n    formatting?: FormattingContext, \n    context?: FormattingContext\n  ) {\n    context = context || this.globalContext;\n\n    if(!this.data) {\n      return this.useOriginalText('' + text, num, formatting);\n    }\n\n    const contextData = this.getContextData(this.data, context);\n\n    let result: string | null = null;\n    \n    if(contextData) {\n      result = this.findTranslation(text, num, formatting, contextData?.values);\n    }\n\n    if(result === null) {\n      result = this.findTranslation(text, num, formatting, this.data.values);\n    }    \n\n    if(result === null)  {\n      result = this.useOriginalText('' + text, num, formatting);\n    }\n\n    return result;  \n  }\n\n  protected findTranslation(\n    text: string | number,\n    num?: number,\n    formatting?: FormattingContext,\n    data?: Values\n  ) {\n    let value = data?.[text];\n\n    if(value === undefined) {\n      return null;\n    }\n\n    if(typeof value === 'object' && !Array.isArray(value)) {\n      if(this.extension) {\n        value = '' + this.extension(text, num, formatting, value);\n        value = this.applyNumbers(value, num || 0);\n\n        return this.applyFormatting(value, formatting);\n      } else {\n        return this.useOriginalText('' + text, num, formatting);\n      }\n    }  \n\n    if(num === undefined && typeof value === 'string') {\n      return this.applyFormatting(value, formatting);\n    } else if(value instanceof Array) {               \n      for(const triple of value) {\n        if(\n          num === undefined && triple[0] === null && triple[1] === null || \n          num !== undefined && (\n            triple[0] !== null && num >= triple[0] && (triple[1] === null || num <= triple[1]) || \n            triple[0] === null && triple[1] && num <= triple[1]\n          )\n        ) {\n          const numVal = num || 0;\n          const textVal = '' + (triple[2] ?? '');          \n\n          const result = this.applyNumbers(textVal, numVal);\n\n          return this.applyFormatting(result, formatting);\n        }\n      }\n    }\n\n    return null;\n  }\n\n  protected applyNumbers(str: string, num: number) {\n    str = str.replace('-%n', '' + -num);\n    str = str.replace('%n', '' + num);\n\n    return str;\n  }\n\n  protected applyFormatting(text: string, formatting?: FormattingContext) {\n    if(formatting) {\n      for(const key of Object.keys(formatting)) {\n        const regex = new RegExp(`%{${key}}`, 'g');\n        text = text.replace(regex, formatting[key]);\n      }\n    }\n\n    return text;\n  }\n\n  protected getContextData(data: DataOptions, context: FormattingContext) {\n    if(!data.contexts) {\n      return null;\n    }\n\n    for(const ctx of data.contexts) {\n      let equal = true;\n\n      for(const key of Object.keys(ctx.matches)) {\n        const value = ctx.matches[key];\n\n        equal = equal && value === context[key];\n      }\n\n      if(equal) {\n        return ctx;\n      }\n    }\n\n    return null;\n  }\n\n  protected useOriginalText(text: string, num?: number, formatting?: FormattingContext) {\n    if(num === undefined) {\n      return this.applyFormatting(text, formatting);\n    }\n\n    return this.applyFormatting(text.replace('%n', '' + num), formatting);\n  }\n}\n", "import { Page } from 'router/src/data/page.ts';\nimport { Router } from 'router/src/router.ts';\nimport { RouteNavigator } from 'router/src/route-navigator.ts';\n\nimport { FormattingContext } from 'i18n/src/data/formatting-context.ts';\nimport { Translator } from 'i18n/src/translator.ts';\n\nimport { RouteOptions } from './data/route-options.ts';\nimport { RouteState } from './data/route-state.ts';\n\nimport { View } from './views/view.ts';\nimport { BaseLayout } from './views/layouts/base-layout.ts';\n\nimport { PAGE_ROOT } from '../globals.ts';\n\nexport const router = new Router<RouteOptions, RouteState>({ root: PAGE_ROOT });\nexport const routeNavigator = new RouteNavigator<RouteOptions, RouteState>(router);\n\nexport const views: {\n  [key: string]: View\n} = {};\n\nexport const layouts: {\n  [key: string]: BaseLayout & View\n} = {};\n\nexport const languages: {\n  [key: string]: Translator\n} = {};\n\nexport interface GlobalContext {\n  page?: Page<RouteOptions, RouteState>,\n  tr: (\n    text: string | number, \n    defaultNumOrFormatting?: number | FormattingContext, \n    numOrFormattingOrContext?: number | FormattingContext,\n    formattingOrContext?: FormattingContext    \n  ) => string;\n}\n\nconst translator = new Translator();\n\nexport const context: GlobalContext = {   \n  tr: translator.translate.bind(translator)\n};\n", "import { routeNavigator, layouts as globalLayouts } from './globals.ts';\n\nexport async function sleep(ms?: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport async function navigateHandler(event: Event, elem: HTMLElement) {\n  event.preventDefault();\n\n  const path = elem.getAttribute?.('href');\n\n  if(path) {\n    await routeNavigator.navigateTo(path);\n  }\n}\n\nexport async function loadContent(\n  parent: HTMLElement | null, \n  firstTime: boolean, \n  layouts: string[]\n): Promise<HTMLElement> {\n  let content: HTMLElement;\n\n  if(firstTime || parent) {\n    content = parent || document.body;\n  } else {\n    let path = location.pathname + '?ajax=1&init=1&time=' + Date.now();\n\n    const layoutsToLoad = [];\n\n    for(let layout of layouts) {\n      if(!(layout in globalLayouts)) {\n        layoutsToLoad.push(layout);\n      }\n    }\n\n    if(layoutsToLoad.length > 0) {\n      path += '&layouts=' + layoutsToLoad.join(',');\n    }\n\n    const html = await (await fetch(path)).text();\n    \n    content = document.createElement('div');\n\n    content.innerHTML = html;\n  }\n\n  return content;\n}\n\nexport async function mount(elem: HTMLElement | null) {\n  await sleep(10);\n\n  elem?.classList.remove('page-unmount');\n}\n\nexport async function unmount(elem: HTMLElement | null) {\n  elem?.classList.add('page-unmount');\n\n  await sleep(250);\n}\n\n\n"],
  "mappings": "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",
  "names": []
}
