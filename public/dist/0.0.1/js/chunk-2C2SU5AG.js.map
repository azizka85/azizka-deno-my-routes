{
  "version": 3,
  "sources": ["../../../../src/client/views/layouts/base-layout.ts", "../../../../src/utils.ts"],
  "sourcesContent": ["import { View } from \"../view.ts\";\n\nexport class BaseLayout {\n  protected content: View | null = null;\n\n  async replaceContent(content: View) {\n    await this.content?.unmount?.();\n    this.content?.elem?.replaceWith(content.elem || '');\n    await content.mount?.();\n\n    this.content = content;\n  }\n}\n", "import { trimSlashes } from 'router/src/utils.ts';\n\nimport { LANGUAGES } from \"./globals.ts\";\n\nexport function getQueryParameters(\n  query: {[key: string]: string}\n) {\n  const parameters: string[] = [];\n\n  for(let key of Object.keys(query)) {\n    if(query[key]) {\n      parameters.push(`${key}=${query[key]}`);\n    } else {\n      parameters.push(key);\n    }\n  }\n\n  return parameters.join('&');  \n}\n\nexport function setQueryParameter(\n  query: {[key: string]: string}, \n  parameter: string, \n  value: string\n) {\n  const data = {...query};\n\n  data[parameter] = value;\n\n  return getQueryParameters(data);\n}\n\nexport function toggleQueryParameter(\n  query: {[key: string]: string}, \n  parameter: string\n) {\n  const data = {...query};\n\n  if(parameter in data) {\n    delete data[parameter];\n\n    return getQueryParameters(data);\n  }\n\n  return setQueryParameter(data, parameter, '1');\n}\n\nexport function capitalize(input: string) {\n  if(!input) {\n    return input;\n  }\n\n  const chars = input.split('');\n\n  return chars[0].toUpperCase() + chars.slice(1).join('').toLowerCase();\n}\n\nexport function toCamel(input: string) {\n  const parts = input.split('-');\n\n  return parts.map(item => capitalize(item)).join('');\n}\n\nexport const localeRoute = `(${Object.keys(LANGUAGES).join('|')})?`;\n\nexport function changeLangPath(url: string, lang: string) {\n  url = trimSlashes(url);\n\n  const langRoute = new RegExp(`^(${Object.keys(LANGUAGES).join('|')})`);\n\n  const index = url.search(langRoute);\n\n  if(index >= 0) {\n    return url.replace(langRoute, lang)\n  }\n\n  return `${lang}/${url}`;\n}\n"],
  "mappings": ";;;;;;AAEO,uBAAiB;AAAA,EACZ,UAAuB;AAAA,QAE3B,eAAe,SAAe;AAClC,UAAM,KAAK,SAAS;AACpB,SAAK,SAAS,MAAM,YAAY,QAAQ,QAAQ;AAChD,UAAM,QAAQ;AAEd,SAAK,UAAU;AAAA;AAAA;;;ACNZ,4BACL,OACA;AACA,QAAM,aAAuB;AAE7B,WAAQ,OAAO,OAAO,KAAK,QAAQ;AACjC,QAAG,MAAM,MAAM;AACb,iBAAW,KAAK,GAAG,OAAO,MAAM;AAAA,WAC3B;AACL,iBAAW,KAAK;AAAA;AAAA;AAIpB,SAAO,WAAW,KAAK;AAAA;AAGlB,2BACL,OACA,WACA,OACA;AACA,QAAM,OAAO,KAAI;AAEjB,OAAK,aAAa;AAElB,SAAO,mBAAmB;AAAA;AAGrB,8BACL,OACA,WACA;AACA,QAAM,OAAO,KAAI;AAEjB,MAAG,aAAa,MAAM;AACpB,WAAO,KAAK;AAEZ,WAAO,mBAAmB;AAAA;AAG5B,SAAO,kBAAkB,MAAM,WAAW;AAAA;AAGrC,oBAAoB,OAAe;AACxC,MAAG,CAAC,OAAO;AACT,WAAO;AAAA;AAGT,QAAM,QAAQ,MAAM,MAAM;AAE1B,SAAO,MAAM,GAAG,gBAAgB,MAAM,MAAM,GAAG,KAAK,IAAI;AAAA;AAGnD,iBAAiB,OAAe;AACrC,QAAM,QAAQ,MAAM,MAAM;AAE1B,SAAO,MAAM,IAAI,UAAQ,WAAW,OAAO,KAAK;AAAA;AAG3C,IAAM,cAAc,IAAI,OAAO,KAAK,WAAW,KAAK;AAEpD,wBAAwB,KAAa,MAAc;AACxD,QAAM,YAAY;AAElB,QAAM,YAAY,IAAI,OAAO,KAAK,OAAO,KAAK,WAAW,KAAK;AAE9D,QAAM,QAAQ,IAAI,OAAO;AAEzB,MAAG,SAAS,GAAG;AACb,WAAO,IAAI,QAAQ,WAAW;AAAA;AAGhC,SAAO,GAAG,QAAQ;AAAA;",
  "names": []
}
